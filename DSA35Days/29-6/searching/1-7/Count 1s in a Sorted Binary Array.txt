Count 1s in a Sorted Binary Array
TC = o(nlogn)
Sc = o(1)

optimal approach:-

int Countonce(int arr[] , int n)
{
    int low = 0;
    
    int high = n-1;

   while(low <= high)
   {
      int mid = (low + high)/2; // we find first mid


      if(arr[mid] == 0) // suppose my mid is 0 then we need go right side
      {
           low = low + 1;
      }
      else{

           if(mid == 0 || arr[mid -1] != arr[mid]) // we will check my current mid != mid-1 it mean this first occurance 
                                                   then i will say n - mid;            
              {
                      return n - mid;
              }else{
               
                      high = mid-1;

                   }
    }
  }
}
return 0;

}
          



